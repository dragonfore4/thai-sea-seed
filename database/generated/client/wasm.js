
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FishFamilyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FishRarityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FishScalarFieldEnum = {
  id: 'id',
  name: 'name',
  scientificName: 'scientificName',
  description: 'description',
  imageUrl: 'imageUrl',
  habitat: 'habitat',
  length: 'length',
  age: 'age',
  depthLevel: 'depthLevel',
  weight: 'weight',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  familyId: 'familyId',
  rarityId: 'rarityId'
};

exports.Prisma.DetectionHistoryScalarFieldEnum = {
  id: 'id',
  imageUrl: 'imageUrl',
  claimToken: 'claimToken',
  isClaimed: 'isClaimed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.DetectionResultScalarFieldEnum = {
  id: 'id',
  confidence: 'confidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  detectionHistoryId: 'detectionHistoryId',
  fishId: 'fishId'
};

exports.Prisma.UserPointHistoryScalarFieldEnum = {
  id: 'id',
  point: 'point',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  detectionHistoryId: 'detectionHistoryId',
  missionId: 'missionId',
  fishId: 'fishId'
};

exports.Prisma.MissionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  point: 'point',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MissionDetailTargetScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  missionId: 'missionId',
  fishId: 'fishId'
};

exports.Prisma.UserMissionProgressScalarFieldEnum = {
  id: 'id',
  isSuccess: 'isSuccess',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  missionId: 'missionId',
  fishId: 'fishId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  FishFamily: 'FishFamily',
  FishRarity: 'FishRarity',
  Fish: 'Fish',
  DetectionHistory: 'DetectionHistory',
  DetectionResult: 'DetectionResult',
  UserPointHistory: 'UserPointHistory',
  Mission: 'Mission',
  MissionDetailTarget: 'MissionDetailTarget',
  UserMissionProgress: 'UserMissionProgress'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/kemkai/test/seed/database/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/home/kemkai/test/seed/database/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.12.0",
  "engineVersion": "8047c96bbd92db98a2abc7c9323ce77c02c89dbc",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"../generated/client\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                  String                @id @default(uuid()) @map(\"_id\")\n  name                String\n  email               String\n  emailVerified       Boolean\n  image               String?\n  createdAt           DateTime\n  updatedAt           DateTime\n  sessions            Session[]\n  accounts            Account[]\n  detectionHistory    DetectionHistory[]\n  userPointHistory    UserPointHistory[]\n  userMissionProgress UserMissionProgress[]\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id @default(uuid()) @map(\"_id\")\n  expiresAt DateTime\n  token     String\n  createdAt DateTime\n  updatedAt DateTime\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id @default(uuid()) @map(\"_id\")\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id @default(uuid()) @map(\"_id\")\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\n/**\n * Fish Family\n * For categorize fish by family\n */\nmodel FishFamily {\n  id          String   @id @default(uuid()) @map(\"_id\")\n  name        String\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  fishes      Fish[]\n\n  @@map(\"fish_family\")\n}\n\n/**\n * Fish Rarity\n * For categorize fish by rarity\n * 1. พบบ่อย\n * 2. หายาก\n * 3. ใกล้สูญพันธุ์\n */\nmodel FishRarity {\n  id        String   @id @default(uuid()) @map(\"_id\")\n  name      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  fishes    Fish[]\n\n  @@map(\"fish_rarity\")\n}\n\nmodel Fish {\n  id                   String                @id @default(uuid()) @map(\"_id\")\n  name                 String\n  scientificName       String?\n  description          String?\n  imageUrl             String?\n  habitat              String?\n  length               String?\n  age                  String?\n  depthLevel           String?\n  weight               String?\n  createdAt            DateTime              @default(now())\n  updatedAt            DateTime              @updatedAt\n  familyId             String?\n  family               FishFamily?           @relation(fields: [familyId], references: [id])\n  rarityId             String?\n  rarity               FishRarity?           @relation(fields: [rarityId], references: [id])\n  detectionResults     DetectionResult[]\n  userMissionProgress  UserMissionProgress[]\n  userPointHistories   UserPointHistory[]\n  missionDetailTargets MissionDetailTarget[]\n\n  @@index([familyId])\n  @@index([rarityId])\n  @@map(\"fish\")\n}\n\n/**\n * Detection History\n * For record detection history\n */\nmodel DetectionHistory {\n  id               String            @id @default(uuid()) @map(\"_id\")\n  imageUrl         String\n  claimToken       String?           @unique\n  isClaimed        Boolean           @default(false)\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  userId           String\n  user             User              @relation(fields: [userId], references: [id])\n  userPointHistory UserPointHistory? @relation(\"DetectionPoint\")\n  detectionResults DetectionResult[]\n\n  @@index([userId, createdAt])\n  @@index([isClaimed])\n  @@map(\"detection_history\")\n}\n\nmodel DetectionResult {\n  id                 String           @id @default(uuid()) @map(\"_id\")\n  confidence         Float\n  createdAt          DateTime         @default(now())\n  updatedAt          DateTime         @updatedAt\n  detectionHistoryId String\n  detectionHistory   DetectionHistory @relation(fields: [detectionHistoryId], references: [id], onDelete: Cascade)\n  fishId             String?\n  fish               Fish?            @relation(fields: [fishId], references: [id])\n\n  @@map(\"detection_result\")\n}\n\n/**\n * User Point History\n * For record user point history\n */\nmodel UserPointHistory {\n  id                 String            @id @default(uuid()) @map(\"_id\")\n  point              Int\n  createdAt          DateTime          @default(now())\n  updatedAt          DateTime          @updatedAt\n  userId             String\n  user               User              @relation(fields: [userId], references: [id])\n  detectionHistoryId String?           @unique\n  detectionHistory   DetectionHistory? @relation(\"DetectionPoint\", fields: [detectionHistoryId], references: [id])\n  missionId          String?\n  mission            Mission?          @relation(fields: [missionId], references: [id])\n  fishId             String?\n  fish               Fish?             @relation(fields: [fishId], references: [id])\n\n  @@unique([missionId, userId, fishId])\n  @@index([userId, createdAt])\n  @@map(\"user_point_history\")\n}\n\n/**\n * Mission\n * For record mission\n */\nmodel Mission {\n  id             String                @id @default(uuid()) @map(\"_id\")\n  title          String\n  point          Int                   @default(1)\n  description    String?\n  createdAt      DateTime              @default(now())\n  updatedAt      DateTime              @updatedAt\n  detailTargets  MissionDetailTarget[]\n  userProgresses UserMissionProgress[]\n  pointHistories UserPointHistory[]\n\n  @@map(\"mission\")\n}\n\n/**\n * Mission Detail Target\n * For record mission detail target\n */\nmodel MissionDetailTarget {\n  id        String   @id @default(uuid()) @map(\"_id\")\n  amount    Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  missionId String\n  mission   Mission  @relation(fields: [missionId], references: [id])\n  fishId    String\n  fish      Fish     @relation(fields: [fishId], references: [id])\n\n  @@index([fishId])\n  @@map(\"mission_detail_target\")\n}\n\n/**\n * User Mission Progress\n * For record user mission progress\n */\nmodel UserMissionProgress {\n  id        String   @id @default(uuid()) @map(\"_id\")\n  isSuccess Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  userId    String\n  user      User     @relation(fields: [userId], references: [id])\n  missionId String\n  mission   Mission  @relation(fields: [missionId], references: [id])\n  fish      Fish     @relation(fields: [fishId], references: [id])\n  fishId    String\n\n  @@unique([userId, missionId, fishId])\n  @@map(\"user_mission_progress\")\n}\n",
  "inlineSchemaHash": "9be8dc1666038cb3e67011510124bad8f6302c639a4a1c1cee9d5b829f4db366",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"detectionHistory\",\"kind\":\"object\",\"type\":\"DetectionHistory\",\"relationName\":\"DetectionHistoryToUser\"},{\"name\":\"userPointHistory\",\"kind\":\"object\",\"type\":\"UserPointHistory\",\"relationName\":\"UserToUserPointHistory\"},{\"name\":\"userMissionProgress\",\"kind\":\"object\",\"type\":\"UserMissionProgress\",\"relationName\":\"UserToUserMissionProgress\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"FishFamily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fishes\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"FishToFishFamily\"}],\"dbName\":\"fish_family\"},\"FishRarity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fishes\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"FishToFishRarity\"}],\"dbName\":\"fish_rarity\"},\"Fish\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scientificName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"habitat\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"length\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depthLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"familyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"family\",\"kind\":\"object\",\"type\":\"FishFamily\",\"relationName\":\"FishToFishFamily\"},{\"name\":\"rarityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rarity\",\"kind\":\"object\",\"type\":\"FishRarity\",\"relationName\":\"FishToFishRarity\"},{\"name\":\"detectionResults\",\"kind\":\"object\",\"type\":\"DetectionResult\",\"relationName\":\"DetectionResultToFish\"},{\"name\":\"userMissionProgress\",\"kind\":\"object\",\"type\":\"UserMissionProgress\",\"relationName\":\"FishToUserMissionProgress\"},{\"name\":\"userPointHistories\",\"kind\":\"object\",\"type\":\"UserPointHistory\",\"relationName\":\"FishToUserPointHistory\"},{\"name\":\"missionDetailTargets\",\"kind\":\"object\",\"type\":\"MissionDetailTarget\",\"relationName\":\"FishToMissionDetailTarget\"}],\"dbName\":\"fish\"},\"DetectionHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claimToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isClaimed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DetectionHistoryToUser\"},{\"name\":\"userPointHistory\",\"kind\":\"object\",\"type\":\"UserPointHistory\",\"relationName\":\"DetectionPoint\"},{\"name\":\"detectionResults\",\"kind\":\"object\",\"type\":\"DetectionResult\",\"relationName\":\"DetectionHistoryToDetectionResult\"}],\"dbName\":\"detection_history\"},\"DetectionResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"detectionHistoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectionHistory\",\"kind\":\"object\",\"type\":\"DetectionHistory\",\"relationName\":\"DetectionHistoryToDetectionResult\"},{\"name\":\"fishId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fish\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"DetectionResultToFish\"}],\"dbName\":\"detection_result\"},\"UserPointHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"point\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPointHistory\"},{\"name\":\"detectionHistoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detectionHistory\",\"kind\":\"object\",\"type\":\"DetectionHistory\",\"relationName\":\"DetectionPoint\"},{\"name\":\"missionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mission\",\"kind\":\"object\",\"type\":\"Mission\",\"relationName\":\"MissionToUserPointHistory\"},{\"name\":\"fishId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fish\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"FishToUserPointHistory\"}],\"dbName\":\"user_point_history\"},\"Mission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"point\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"detailTargets\",\"kind\":\"object\",\"type\":\"MissionDetailTarget\",\"relationName\":\"MissionToMissionDetailTarget\"},{\"name\":\"userProgresses\",\"kind\":\"object\",\"type\":\"UserMissionProgress\",\"relationName\":\"MissionToUserMissionProgress\"},{\"name\":\"pointHistories\",\"kind\":\"object\",\"type\":\"UserPointHistory\",\"relationName\":\"MissionToUserPointHistory\"}],\"dbName\":\"mission\"},\"MissionDetailTarget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"missionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mission\",\"kind\":\"object\",\"type\":\"Mission\",\"relationName\":\"MissionToMissionDetailTarget\"},{\"name\":\"fishId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fish\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"FishToMissionDetailTarget\"}],\"dbName\":\"mission_detail_target\"},\"UserMissionProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"isSuccess\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserMissionProgress\"},{\"name\":\"missionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mission\",\"kind\":\"object\",\"type\":\"Mission\",\"relationName\":\"MissionToUserMissionProgress\"},{\"name\":\"fish\",\"kind\":\"object\",\"type\":\"Fish\",\"relationName\":\"FishToUserMissionProgress\"},{\"name\":\"fishId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"user_mission_progress\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

